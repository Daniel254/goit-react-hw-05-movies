{"version":3,"file":"static/js/122.51a6c9d7.chunk.js","mappings":"wOA4BA,MAxBA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,KAAKH,EAC/B,GAAE,CAACJ,IACCG,EAGEA,EAAaK,QAClB,wBACGL,EAAaM,KAAI,SAAAC,GAAM,OACtB,2BACE,wBAAKA,EAAOC,UACZ,uBAAoBD,EAAOE,SAAnBF,EAAOG,MAFRH,EAAOG,GADM,OAQ1B,wEAZO,IAcV,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { getMovieReviews } from 'api/tmdbApi';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(setMovieReviews);\n  }, [movieId]);\n  if (!movieReviews) {\n    return null;\n  }\n  return movieReviews.length ? (\n    <ul>\n      {movieReviews.map(review => (\n        <li key={review.id}>\n          <h3>{review.author}</h3>\n          <p key={review.id}>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <span>We don't have any reviews for this movie.</span>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","length","map","review","author","content","id"],"sourceRoot":""}