{"version":3,"file":"static/js/134.2f54e608.chunk.js","mappings":"2PAKe,SAASA,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAIF,EAAaG,IAAI,KACrBC,GAAWC,EAAAA,EAAAA,OAMjBC,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAiBL,GACdM,KAAKZ,GACLa,OAAM,SAAAZ,GAAK,OAAIC,EAASD,EAAMa,QAAnB,GACf,GAAE,CAACR,IAEJ,IAAMS,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbX,EAAC,OAAEA,QAAF,IAAEA,EAAAA,EAAK,IAEVY,SAAU,YAAY,IAATZ,EAAQ,EAARA,EACPA,GACFD,EAAgB,CAAEC,EAAAA,GAErB,IAEH,OACE,iCACE,kBAAMY,SAAUH,EAAOI,aAAvB,WACE,kBACEC,KAAK,OACLC,KAAK,IACLC,WAAS,EACTC,aAAa,MACbC,MAAOT,EAAOU,OAAOnB,EACrBoB,SAAUX,EAAOY,gBAEnB,mBAAQP,KAAK,SAAb,uBAEK,OAANrB,QAAM,IAANA,GAAAA,EAAQ6B,QACP,wBACG7B,EAAO8B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAIC,OAAOH,GAAKI,MAAO,CAAEC,KAAM3B,GAArC,SACGuB,KAFID,EADC,OASd,uBAAI7B,MAIX,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { getMoviesByQuery } from 'api/tmdbApi';\nimport { useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const q = searchParams.get('q');\n  const location = useLocation();\n\n  // const params = useMemo(\n  //   () => Object.fromEntries([...searchParams]),\n  //   [searchParams]\n  // );\n  useEffect(() => {\n    if (!q) {\n      return;\n    }\n    getMoviesByQuery(q)\n      .then(setMovies)\n      .catch(error => setError(error.message));\n  }, [q]);\n\n  const formik = useFormik({\n    initialValues: {\n      q: q ?? '',\n    },\n    onSubmit: ({ q }) => {\n      if (q) {\n        setSearchParams({ q });\n      }\n    },\n  });\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"q\"\n          autoFocus\n          autoComplete=\"off\"\n          value={formik.values.q}\n          onChange={formik.handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies?.length ? (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={String(id)} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>{error}</p>\n      )}\n    </>\n  );\n}\n"],"names":["Movies","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","q","get","location","useLocation","useEffect","getMoviesByQuery","then","catch","message","formik","useFormik","initialValues","onSubmit","handleSubmit","type","name","autoFocus","autoComplete","value","values","onChange","handleChange","length","map","id","title","to","String","state","from"],"sourceRoot":""}